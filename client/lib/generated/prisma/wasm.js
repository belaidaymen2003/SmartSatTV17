
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  name: 'name',
  passwordHash: 'passwordHash',
  role: 'role',
  credits: 'credits',
  authLastAt: 'authLastAt',
  status: 'status',
  auth: 'auth',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VideoScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  thumbnail: 'thumbnail',
  videoUrl: 'videoUrl',
  price: 'price',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CatalogAppScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  downloadLink: 'downloadLink',
  image: 'image',
  credit: 'credit',
  version: 'version',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  brandName: 'brandName',
  accentColor: 'accentColor',
  allowRegistrations: 'allowRegistrations',
  maintenanceMode: 'maintenanceMode',
  updatedAt: 'updatedAt'
};

exports.Prisma.BeInSportActivationScalarFieldEnum = {
  id: 'id',
  code: 'code',
  customerId: 'customerId',
  months: 'months',
  createdBy: 'createdBy',
  createdAt: 'createdAt'
};

exports.Prisma.IPTVChannelScalarFieldEnum = {
  id: 'id',
  name: 'name',
  logo: 'logo',
  description: 'description',
  category: 'category',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionPlanScalarFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  userId: 'userId',
  status: 'status',
  startDate: 'startDate',
  endDate: 'endDate',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  credit: 'credit',
  code: 'code',
  channelId: 'channelId',
  duration: 'duration',
  status: 'status',
  createAt: 'createAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  USER: 'USER'
};

exports.UserStatus = exports.$Enums.UserStatus = {
  APPROVED: 'APPROVED',
  BANNED: 'BANNED'
};

exports.ItemCategory = exports.$Enums.ItemCategory = {
  MOVIE: 'MOVIE',
  TV_SERIES: 'TV_SERIES',
  ANIME: 'ANIME',
  CARTOON: 'CARTOON',
  LIVE_TV: 'LIVE_TV',
  STREAMING: 'STREAMING'
};

exports.ItemStatus = exports.$Enums.ItemStatus = {
  VISIBLE: 'VISIBLE',
  HIDDEN: 'HIDDEN'
};

exports.CommentStatus = exports.$Enums.CommentStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  HIDDEN: 'HIDDEN'
};

exports.ReviewStatus = exports.$Enums.ReviewStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  HIDDEN: 'HIDDEN'
};

exports.Quality = exports.$Enums.Quality = {
  SD: 'SD',
  HD: 'HD',
  FullHD: 'FullHD',
  K4: 'K4'
};

exports.Auth = exports.$Enums.Auth = {
  CONNECTED: 'CONNECTED',
  DISCONNECTED: 'DISCONNECTED'
};

exports.DurationPlan = exports.$Enums.DurationPlan = {
  ONE_MONTH: 'ONE_MONTH',
  SIX_MONTHS: 'SIX_MONTHS',
  ONE_YEAR: 'ONE_YEAR'
};

exports.Status = exports.$Enums.Status = {
  ACTIVE: 'ACTIVE',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED'
};

exports.Category = exports.$Enums.Category = {
  IPTV: 'IPTV',
  STREAMING: 'STREAMING'
};

exports.Prisma.ModelName = {
  User: 'User',
  Video: 'Video',
  CatalogApp: 'CatalogApp',
  Settings: 'Settings',
  BeInSportActivation: 'BeInSportActivation',
  IPTVChannel: 'IPTVChannel',
  SubscriptionPlan: 'SubscriptionPlan',
  Subscription: 'Subscription'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/app/code/client/lib/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/app/code/client/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  ADMIN\n  USER\n}\n\nenum UserStatus {\n  APPROVED\n  BANNED\n}\n\nenum ItemCategory {\n  MOVIE\n  TV_SERIES\n  ANIME\n  CARTOON\n  LIVE_TV\n  STREAMING\n}\n\nenum ItemStatus {\n  VISIBLE\n  HIDDEN\n}\n\nenum CommentStatus {\n  PENDING\n  APPROVED\n  HIDDEN\n}\n\nenum ReviewStatus {\n  PENDING\n  APPROVED\n  HIDDEN\n}\n\nenum Quality {\n  SD\n  HD\n  FullHD\n  K4\n}\n\nenum Auth {\n  CONNECTED\n  DISCONNECTED\n}\n\nenum DurationPlan {\n  ONE_MONTH\n  SIX_MONTHS\n  ONE_YEAR\n}\n\nenum Status {\n  ACTIVE\n  EXPIRED\n  CANCELLED\n}\n\nenum Category {\n  IPTV\n  STREAMING\n}\n\nmodel User {\n  id               Int                   @id @default(autoincrement())\n  email            String                @unique\n  username         String                @unique\n  name             String\n  passwordHash     String\n  role             Role                  @default(USER)\n  credits          Int                   @default(0)\n  authLastAt       DateTime?\n  status           UserStatus            @default(APPROVED)\n  video            Video[]\n  auth             Auth                  @default(DISCONNECTED)\n  beinJobs         BeInSportActivation[] @relation(\"BeInByUser\")\n  subscriptionplan SubscriptionPlan[]\n  appDownload      CatalogApp[]\n  createdAt        DateTime              @default(now())\n  updatedAt        DateTime              @updatedAt\n\n  @@index([role, status])\n}\n\nmodel Video {\n  id          Int      @id @default(autoincrement())\n  title       String\n  description String?\n  thumbnail   String?\n  videoUrl    String\n  price       Float\n  userId      Int?\n  user        User?    @relation(fields: [userId], references: [id])\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\nmodel CatalogApp {\n  id           Int      @id @default(autoincrement())\n  name         String\n  description  String\n  downloadLink String\n  image        String\n  credit       Float\n  version      String\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  userId       Int?\n  user         User?    @relation(fields: [userId], references: [id])\n}\n\nmodel Settings {\n  id                 Int      @id @default(1)\n  brandName          String   @default(\"HOTFLIX\")\n  accentColor        String   @default(\"#f97316\")\n  allowRegistrations Boolean  @default(true)\n  maintenanceMode    Boolean  @default(false)\n  updatedAt          DateTime @updatedAt\n}\n\nmodel BeInSportActivation {\n  id         Int      @id @default(autoincrement())\n  code       String   @unique\n  customerId String\n  months     Int\n  createdBy  Int?\n  createdAt  DateTime @default(now())\n\n  author User? @relation(\"BeInByUser\", fields: [createdBy], references: [id])\n}\n\nmodel IPTVChannel {\n  id            Int            @id @default(autoincrement())\n  name          String\n  logo          String?\n  description   String?\n  category      Category\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  subscriptions Subscription[]\n}\n\nmodel SubscriptionPlan {\n  id             Int           @id @default(autoincrement())\n  subscription   Subscription? @relation(fields: [subscriptionId], references: [id])\n  subscriptionId Int?\n  user           User?         @relation(fields: [userId], references: [id])\n  userId         Int?\n  status         Status        @default(ACTIVE)\n  startDate      DateTime      @default(now())\n  endDate        DateTime\n  updatedAt      DateTime      @updatedAt\n}\n\nmodel Subscription {\n  id               Int                @id @default(autoincrement())\n  credit           Float              @default(0)\n  code             String?            @unique\n  channel          IPTVChannel        @relation(fields: [channelId], references: [id])\n  channelId        Int\n  duration         DurationPlan       @default(ONE_MONTH)\n  status           Status             @default(ACTIVE)\n  subscriptionplan SubscriptionPlan[]\n  createAt         DateTime           @default(now())\n  updatedAt        DateTime           @updatedAt\n}\n",
  "inlineSchemaHash": "632e9da6202296a2910547fe802b9fc0a73f674039d95988e6c8fcf3f4edc72f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"credits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"authLastAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UserStatus\"},{\"name\":\"video\",\"kind\":\"object\",\"type\":\"Video\",\"relationName\":\"UserToVideo\"},{\"name\":\"auth\",\"kind\":\"enum\",\"type\":\"Auth\"},{\"name\":\"beinJobs\",\"kind\":\"object\",\"type\":\"BeInSportActivation\",\"relationName\":\"BeInByUser\"},{\"name\":\"subscriptionplan\",\"kind\":\"object\",\"type\":\"SubscriptionPlan\",\"relationName\":\"SubscriptionPlanToUser\"},{\"name\":\"appDownload\",\"kind\":\"object\",\"type\":\"CatalogApp\",\"relationName\":\"CatalogAppToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Video\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"videoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVideo\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CatalogApp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"downloadLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CatalogAppToUser\"}],\"dbName\":null},\"Settings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brandName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accentColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allowRegistrations\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"maintenanceMode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BeInSportActivation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"months\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BeInByUser\"}],\"dbName\":null},\"IPTVChannel\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"Category\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"IPTVChannelToSubscription\"}],\"dbName\":null},\"SubscriptionPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToSubscriptionPlan\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubscriptionPlanToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"credit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channel\",\"kind\":\"object\",\"type\":\"IPTVChannel\",\"relationName\":\"IPTVChannelToSubscription\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duration\",\"kind\":\"enum\",\"type\":\"DurationPlan\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"subscriptionplan\",\"kind\":\"object\",\"type\":\"SubscriptionPlan\",\"relationName\":\"SubscriptionToSubscriptionPlan\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

